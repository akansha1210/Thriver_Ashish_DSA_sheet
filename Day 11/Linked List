#Singly Linked List Implement
class Node{
    int data;
    Node next;
    Node(int x){
        data=x;
        next=null;
    }
}
class HelloWorld {
    public static void main(String[] args) {
        Node head=new Node(10);
        Node temp1=new Node(20);
        Node temp2=new Node(30);
        head.next=temp1;
        temp1.next=temp2;
       
    }
}







#Traversing Linked List
class Node{
    int data;
    Node next;
    Node(int x){
        data=x;
        next=null;
    }
}
class HelloWorld {
    public static void main(String[] args) {
        Node head=new Node(10);
        head.next=new Node(20);
        head.next.next=new Node(30);
     
       printList(head);
    }
    public static void printList(Node head){
        Node curr=head;
        while(curr!=null){
            System.out.print(curr.data+" ");
            curr=curr.next;
        }
    }
}

#Recursive Traversal of Singly Linked List 
 public static void printList(Node head){
       if(head==null) return;
       System.out.print(head.data+" ");
       printList(head.next);
    }
    
    
    
    
    
    
#Search in Singly Linked List
public static int search(Node head,int x){
        int pos=1;
        Node curr=head;
    while(curr!=null){
        if(curr.data==x) return pos;
        else{
            pos=pos+1;
            curr=curr.next;
        }
      
    }
      return -1;
    }
    
    
    #Remove
