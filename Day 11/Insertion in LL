
    //Function to insert a node at the beginning of the linked list.
    Node insertAtBeginning(Node head, int x)
    {
        Node temp=new Node(x);
        if(head==null) {
            return temp;
        }
        temp.next=head;
        return temp;
   
    }
    
    //Function to insert a node at the end of the linked list.
    Node insertAtEnd(Node head, int x)
    {
        Node temp=new Node(x);
        if(head==null) return temp;
        Node cur=head;
        while(cur.next!=null){
            cur=cur.next;
        }
        cur.next=temp;
        return head;
  
    }
 //Insert at given position
 
    static void insertAtPosition(Node head, int pos, int data)
    {
        Node temp=new Node(data);
        if(pos==1){
        temp.next=head;
        return temp;
        }
        Node cur=head;
        for(int i=1;i<=pos-1 && cur!=null;i++){
            cur=cur.next;
        }
        if(cur==null) {
            return;
        }
        
        temp.next=cur.next;
        cur.next=temp;
        
        
     }
//Sorted Insert in LL
  static Node insertInSorted(Node head, int data)
    {
        Node temp=new Node(data);
        if(head==null) return temp;
        if(data<head.data) {
            temp.next=head;
            return temp;
        }
        Node cur=head;
        while(cur.next!=null && cur.next.data<data){
            cur=cur.next;
        }
        temp.next=cur.next;
        cur.next=temp;
        return head;
      
    }
