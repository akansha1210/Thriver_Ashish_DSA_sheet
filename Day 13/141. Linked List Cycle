//Method 1 by changing refernces of each node
//by this method you can only detect the loop and you'll loose the linked list as all node will point to dummy node in this method
public boolean hasCycle(ListNode head) {
        ListNode temp=new ListNode(0);//temporary node
        ListNode curr=head;
        while(curr!=null){
            if(curr.next==null) return false;
            if(curr.next==temp) return true; //if current node next is already pointing to the temp node
            ListNode next=curr.next;
            curr.next=temp;//pointing current's next to temp node
            curr=next;

        }
        return false;
    }
    
    
    
    
    
//Method 2 by hashing
public class Solution {
    public boolean hasCycle(ListNode head) {
        HashSet<ListNode> hs=new HashSet<ListNode>();
        for(ListNode curr=head;curr!=null;curr=curr.next){
            if(hs.contains(curr)) return true;
            hs.add(curr);
        }
        return false;
    }
