//Naive Approach
//using extra space and changing data of node
   public ListNode reverseList(ListNode head) {
        ArrayList<Integer>ar=new ArrayList<>();
        for(ListNode curr=head;curr!=null;curr=curr.next){
            ar.add(curr.val);
        }
        for(ListNode curr=head;curr!=null;curr=curr.next){
            curr.val=ar.remove(ar.size()-1);
        }
        return head;
    }
  //Efficient approach 
  //changing links of node rather than changing data
   public ListNode reverseList(ListNode head) {
       ListNode curr=head;
       ListNode prev=null;
       while(curr!=null){
           ListNode next=curr.next;
           curr.next=prev;
           prev=curr;
           curr=next;
       }
        return prev;
    }
